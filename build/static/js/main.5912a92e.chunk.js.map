{"version":3,"sources":["loader/mainLoader.js","App.js","hooks/use-auth-listener.js","index.js","context/socketProvider.js","constants/routes.js","services/userServices.js","context/userProvider.js","context/conversationProvider.js","context/notificationProvider.js","context/postProvider.js","firebase.js","services/resizeService.js","services/postServices.js","context/userPostProvider.js"],"names":["MainLoader","className","Login","lazy","SignUp","Dashboard","NotFound","App","user","jwt","localStorage","getItem","jwtDecode","error","useAuthListener","id","fallback","path","ROUTES","component","ReactDOM","render","document","getElementById","SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","useEffect","newSocket","io","query","close","Provider","value","DASHBOARD","LOGIN","SIGN_UP","PROFILE","MESSAGES","NOTIFIACATION","NOTIMENTION","NEWPOST","TIMELINE","FULLIMG","apiEndpoint","apiUrl","getUserByUsername","usernameOrEmail","a","axios","get","response","data","updateProfileImg","username","profileImg","put","console","log","removeProfileImg","delete","getuserDisplayImgs","UserContext","useUser","UserProvider","users","setUsers","usersProfileImgs","setUsersProfileImgs","activeUser","setActiveUser","profile","setProfile","loading","setLoading","updateUser","useCallback","ruser","prev","i","length","on","getProfileImg","getUser","toggleFollow","isFollowingProfile","profileUserId","followingUserId","emit","following","filter","_id","ConversationsContext","useConversations","ConversationsProvider","unseen","setUnseen","conversations","setConversations","selectedConversation","setSelectedConversation","selectedConversationGroupId","setSelectedConversationGroupId","createConversation","group","prevConversations","allUnseen","addMessageToConversation","membersId","text","sender","date","groupId","madeChange","newMessage","newConversations","map","conversation","messages","off","formattedConversations","index","message","members","find","contact","name","fullName","fromMe","senderName","selected","sendMessage","Date","retriveGroups","createGroup","selectedId","NotificationContext","useNotifications","NotificationProvider","allNoti","setAll","mention","setMention","unreadCount","setCount","getNotification","getMentionNoti","noti","notification","PostContext","usePost","PostProvider","ACTION","timeline","setTimeline","pageNumber","setPageNumber","useReducer","state","action","type","hasMore","payload","savedTimeline","recievedPosts","result","dispatch","addToSaveTimeline","posts","item","post","addRecivedToTimeline","getPostFromTimeline","postId","getPostById","getTimeline","limit","postFeed","files","fileNames","caption","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","imageResize","file","resizeFile","Promise","resolve","Resizer","imageFileResizer","uri","uploadFileToStorage","reffile","storageRef","ref","uploadTask","uploadBytes","then","snapshot","getDownloadURL","url","deleteImgInStorage","desertRef","deleteObject","catch","deletePostById","UserPostContext","useUserPost","UserPostProvider","allProfilepost","setAllProfilePost","profilePost","setProfilePost","setMore","addprofilepost","getProfilePost","addToAllProfilePost","newAlluserPosts"],"mappings":"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","file":"static/js/main.5912a92e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function MainLoader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"loader--heading\">Touch</div>\r\n        </div>\r\n    )\r\n}\r\n","import { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { PostProvider } from './context/postProvider';\nimport { UserPostProvider } from './context/userPostProvider';\nimport useAuthListener from './hooks/use-auth-listener';\n\nimport MainLoader from './loader/mainLoader';\nimport { SocketProvider } from './context/socketProvider';\nimport { UserProvider } from './context/userProvider';\nimport { ConversationsProvider } from './context/conversationProvider';\nimport { NotificationProvider } from './context/notificationProvider';\n\nconst Login = lazy(() => import('./pages/login'));\nconst SignUp = lazy(() => import('./pages/sign-up'));\nconst Dashboard = lazy(() => import('./pages/dashboard'));\nconst NotFound = lazy(() => import('./pages/not-found'));\n\nexport default function App() {\n  const { user, jwt } = useAuthListener()\n\n  return (\n    <SocketProvider jwt={jwt} user={user}>\n      <UserProvider user={user} >\n        <NotificationProvider user={user}>\n          <PostProvider >\n            <UserPostProvider >\n              <ConversationsProvider id={user?.id}>\n                <Router>\n                  <Suspense fallback={<MainLoader />}>\n                    <Switch>\n                      <Route path={ROUTES.LOGIN} component={() => <Login user={user} />} />\n                      <Route path={ROUTES.SIGN_UP} component={() => <SignUp user={user} />} />\n                      <Route path={ROUTES.DASHBOARD} component={() => <Dashboard user={user} />} />\n                      {/* <ProtectedRoute user={user} path={ROUTES.DASHBOARD}  >\n                  <Dashboard />\n                </ProtectedRoute> */}\n                      <Route component={NotFound} />\n                    </Switch>\n                  </Suspense>\n                </Router>\n              </ConversationsProvider>\n            </UserPostProvider>\n          </PostProvider>\n        </NotificationProvider>\n      </UserProvider>\n    </SocketProvider>\n  );\n}\n","// import { useState, useEffect, useContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nexport default function useAuthListener() {\n  let user, jwt;\n  // const [user, setUser] = useState(\"\");\n  // const [jwt, setJwt] = useState(\"\");\n\n  // useEffect(() => {\n  //   try {\n  //     const token = localStorage.getItem('token')\n  //     console.log(token);\n  //     setJwt(curjwt => token) \n  //     setUser(jwtDecode(token));\n\n  //   } catch (error) {\n  //     setUser(null);\n  //   }\n  // }, []);\ntry {\n   jwt = localStorage.getItem('token')\n   user = jwtDecode(jwt)\n} catch (error) {\n  user = null\n}\n  \n  // console.log(user,jwt );\n  \n  return { user, jwt };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/style.css';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\nimport { apiUrl } from \"../config.json\";\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketContext)\r\n}\r\n\r\nexport function SocketProvider({ jwt, user, children }) {\r\n    const [socket, setSocket] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        if (!jwt && !user) return\r\n        const newSocket = io(\r\n            'http://localhost:3003/',\r\n            // 'https://touch-app-server.herokuapp.com/',\r\n            { query: { jwt } }\r\n        )\r\n        setSocket(newSocket)\r\n\r\n        return () => newSocket.close()\r\n    }, [jwt])\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","export const DASHBOARD = '/';\nexport const LOGIN = '/login';\nexport const SIGN_UP = '/sign-up';\nexport const PROFILE = '/user/:username';\nexport const NOT_FOUND = '/not-found';\nexport const MESSAGES = '/messages';\nexport const NOTIFIACATION = '/notification';\nexport const NOTIMENTION = '/notification/mention';\nexport const NEWPOST = '/newpost';\nexport const TIMELINE = '/home';\nexport const CONVERSATION = '/messages/:groupid';\nexport const GROUPINFO = '/messages/:groupid/info';\nexport const FULLIMG = '/:username/:postId/:fileNumber';\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + \"/user\";\r\nconst tokenKey = \"token\"\r\n\r\nexport const getUserByUsername = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const searchUser = async (usernameOrname, pageNumber, limit, cancel) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/search/${usernameOrname}`, {\r\n            params: { page: pageNumber, limit: limit },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const updateProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.put(`${apiEndpoint}/profile-img/${username}`,\r\n            { profileImg }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const removeProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/profile-img/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getuserDisplayImgs = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/display-imgs/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getusersFollowing = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/following/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const getusersFollowers = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/followers/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const toggleFollow = async (isFollowingProfile,\r\n    profileUserId,\r\n    followingUserId) => {\r\n    if (isFollowingProfile) {\r\n        console.log(\"unfollwing\");\r\n        //remove followingUserId from profileUserId's follower list\r\n        //remove profileUserId from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/unfollow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n    }\r\n    else {\r\n        console.log(\"follow\");\r\n        //add followingUserId in profileUserId's follower list\r\n        //add profileUserId's from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/follow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n\r\n    }\r\n}","import React, { useContext, useState, useEffect, createContext, useCallback } from 'react'\nimport { getuserDisplayImgs, getUserByUsername } from '../services/userServices';\nimport { useSocket } from './socketProvider';\n\nconst UserContext = createContext();\n\nexport function useUser() {\n    return useContext(UserContext)\n}\nexport function UserProvider({ user, children }) {\n    const socket = useSocket()\n    const [users, setUsers] = useState([])\n    const [usersProfileImgs, setUsersProfileImgs] = useState([])\n    const [activeUser, setActiveUser] = useState()\n    const [profile, setProfile] = useState()\n    const [loading, setLoading] = useState(false)\n    const queue = [], userQueue = []\n\n    const updateUser = useCallback((ruser) => {\n        setActiveUser(ruser);\n        setUsers(prev => [...prev, ruser])\n    }, [setActiveUser, setUsers])\n\n    useEffect(() => {\n        if (socket == null) return\n        setLoading(true)\n        socket.on('receive-logged-user', updateUser)\n\n    }, [socket, updateUser])\n\n    // const checkAuth = (user) => {\n\n    // }\n\n\n    async function getUser(username) {\n        setLoading(true)\n        let i = 0\n        while (i < users.length && users[i].username != username) {\n            ++i\n        }\n        if (i < users.length) {\n\n            setLoading(false)\n            return users[i]\n        }\n        else {\n            try {\n                const user = await getUserByUsername(username)\n                setUsers(prev => [...prev, user])\n                return user\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        if (socket == null) return\n        socket.on('receive-user', (user) => {\n            // setLoading(false)\n            // setProfile(user)\n            setUsers(prev => [...prev, user])\n        })\n    }, [socket, setUsers])\n\n    function toggleFollow(isFollowingProfile, profileUserId, followingUserId) {\n        if (isFollowingProfile) {\n            console.log(\"unfollwing\");\n            //remove followingUserId from profileUserId's follower list\n            //remove profileUserId from followingUserId's following list\n            socket.emit('unfollow', ({ profileUserId, followingUserId }))\n            const following = activeUser.following.filter(i => i._id !== profileUserId)\n            setActiveUser({ ...activeUser, following })\n        }\n        else {\n            console.log(\"follow\");\n            //add followingUserId in profileUserId's follower list\n            //add profileUserId's from followingUserId's following list\n            socket.emit('follow', ({ profileUserId, followingUserId }))\n            setActiveUser({ ...activeUser, following: [...activeUser.following, { _id: profileUserId }] })\n        }\n    }\n\n    const getProfileImg = async (username) => {\n        let i = 0\n\n        while (i < usersProfileImgs.length && usersProfileImgs[i].user.username !== username) {\n            ++i\n        }\n        if (i < usersProfileImgs.length) {\n            return usersProfileImgs[i]\n        } else {\n\n            try {\n                const profileImg = await getuserDisplayImgs(username)\n                setUsersProfileImgs(prev => [...prev, profileImg])\n                return profileImg\n\n            } catch (error) {\n                console.log(error);\n                return\n            }\n        }\n    }\n\n    console.log(activeUser);\n\n    const value = {\n        user: activeUser,\n        setActiveUser,\n        getUser,\n        profile,\n        setProfile,\n        loading,\n        getProfileImg,\n        usersProfileImgs,\n        toggleFollow\n    }\n\n    return (\n        <UserContext.Provider value={value}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { useSocket } from './socketProvider';\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n    return useContext(ConversationsContext)\r\n}\r\n\r\nexport function ConversationsProvider({ id, children }) {\r\n    const [unseen, setUnseen] = useState(0)\r\n    const [conversations, setConversations] = useState([])\r\n    const [selectedConversation, setSelectedConversation] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [selectedConversationGroupId, setSelectedConversationGroupId] = useState()\r\n    const socket = useSocket()\r\n\r\n    const retriveGroups = () => {\r\n        if (socket == null || conversations.length) return\r\n        setLoading(true)\r\n        socket.emit('get-groups')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-groups', (data) => {\r\n            setLoading(false)\r\n            setConversations(prev => [...prev, ...data])\r\n        })\r\n    }, [socket, setConversations])\r\n\r\n    function createGroup(selectedId, selected) {\r\n        if (socket == null) return\r\n        socket.emit('create-new-group', { selectedId, selected })\r\n        // createConversation()\r\n    }\r\n\r\n    const createConversation = useCallback((group) => {\r\n        setConversations(prevConversations => {\r\n            return [...prevConversations, group]\r\n        })\r\n    }, [setConversations])\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-new-group', (group) => {\r\n            id = group._id\r\n            setUnseen({\r\n                ...unseen,\r\n                allUnseen: unseen.allUnseen + 1,\r\n                [id]: 1\r\n            })\r\n            createConversation(group)\r\n        })\r\n    }, [socket, createConversation])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('responce-create-new-group', (group) => {\r\n            createConversation(group)\r\n        })\r\n    }, [socket, createConversation])\r\n\r\n    const addMessageToConversation = useCallback(({ membersId, text, sender, date, groupId }) => {\r\n\r\n        setConversations(prevConversations => {\r\n            let madeChange = false\r\n            const newMessage = { sender, text, date }\r\n            const newConversations = prevConversations.map(conversation => {\r\n                if (conversation._id === groupId) {\r\n                    madeChange = true\r\n                    return {\r\n                        ...conversation,\r\n                        messages: [...conversation.messages, newMessage]\r\n                    }\r\n                }\r\n\r\n                return conversation\r\n            })\r\n\r\n            if (madeChange) {\r\n                return newConversations\r\n            } else {\r\n                return [\r\n                    ...prevConversations,\r\n                    { _id: groupId, membersId, messages: [newMessage] }\r\n                ]\r\n            }\r\n        })\r\n    }, [setConversations])\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n\r\n        socket.on('receive-message', (group) => {\r\n            setUnseen(prev => prev + 1)\r\n            addMessageToConversation(group)\r\n        })\r\n\r\n        return () => socket.off('receive-message')\r\n    }, [socket, addMessageToConversation])\r\n\r\n\r\n\r\n    function sendMessage(membersId, text, groupId) {\r\n        const date = new Date()\r\n        addMessageToConversation({ membersId, text, sender: id, date, groupId })\r\n        socket.emit('send-message', { membersId, text, groupId, date })\r\n    }\r\n\r\n\r\n    const formattedConversations = conversations.map((conversation, index) => {\r\n        // console.log(\"formated\");\r\n        const messages = conversation.messages.map(message => {\r\n            const members = conversation.members.find(contact => {\r\n                return contact?._id === message?.sender\r\n            })\r\n            const name = (members && members.fullName) || message?.sender\r\n            const fromMe = id === message?.sender\r\n            return { ...message, senderName: name, fromMe }\r\n        })\r\n\r\n        const selected = conversation._id === selectedConversationGroupId\r\n\r\n        return { ...conversation, messages, selected }\r\n    })\r\n\r\n    useEffect(() => {\r\n        formattedConversations.map(conversation => {\r\n            // console.log(\"in effect\");\r\n            if (conversation._id === selectedConversationGroupId) setSelectedConversation(prev => conversation)\r\n        })\r\n    }, [selectedConversationGroupId, conversations])\r\n    console.log(unseen);\r\n    const value = {\r\n        conversations: formattedConversations,\r\n        selectedConversation,\r\n        sendMessage,\r\n        createConversation,\r\n        setSelectedConversationGroupId,\r\n        selectedConversationGroupId,\r\n        retriveGroups,\r\n        createGroup,\r\n        loading,\r\n        unseen,\r\n        setUnseen\r\n    }\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={value}>\r\n            {children}\r\n        </ConversationsContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { getMentionNoti } from '../services/resizeService';\r\nimport { useSocket } from './socketProvider';\r\n\r\nconst NotificationContext = React.createContext()\r\n\r\nexport function useNotifications() {\r\n    return useContext(NotificationContext)\r\n}\r\n\r\nexport function NotificationProvider({ user, children }) {\r\n    const [allNoti, setAll] = useState([])\r\n    const [mention, setMention] = useState([])\r\n    const [unreadCount, setCount] = useState(0)\r\n    const socket = useSocket()\r\n\r\n    const getNotification = async () => {\r\n        const noti = await getMentionNoti(user.username)\r\n        // console.log(noti);\r\n        setMention(noti.notification)\r\n    }\r\n\r\n    // useEffect(() => {\r\n\r\n    //     setCount()\r\n    // }, [mention, allNoti])\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-postnoti', (data) => {\r\n            // console.log(data);\r\n            setAll(prev => [...prev, data])\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('follower-added', (notification) => {\r\n            setCount(prev => prev + 1)\r\n            setMention(prev => [...prev, notification])\r\n        })\r\n    }, [socket])\r\n\r\n    // console.log(allNoti, mention);\r\n    const value = {\r\n        allNoti,\r\n        mention,\r\n        getNotification,\r\n        unreadCount,\r\n        setCount\r\n    }\r\n    // console.log(unreadCount);\r\n    return (\r\n        <NotificationContext.Provider value={value}>\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect, createContext, useCallback, useReducer } from 'react'\r\nimport { getPostById } from '../services/postServices';\r\nimport { useSocket } from './socketProvider';\r\n\r\nconst PostContext = createContext();\r\nexport function usePost() {\r\n    return useContext(PostContext)\r\n}\r\nexport function PostProvider({ children }) {\r\n    const socket = useSocket()\r\n    const ACTION = {\r\n        ADD_POST: 'add-post',\r\n        SET_LOAD: 'set-load',\r\n        ADD_RECIVED_POST: 'add-received-post',\r\n        ADD_POST_AT_START: 'add-post-at-start'\r\n    }\r\n    function reducer(state, action) {\r\n        switch (action.type) {\r\n            case ACTION.ADD_POST:\r\n                return {\r\n                    ...state,\r\n                    loading: false, hasMore: action.payload.hasMore,\r\n                    savedTimeline: [...state.savedTimeline, action.payload.savedTimeline]\r\n                }\r\n            case ACTION.SET_LOAD:\r\n                return {\r\n                    ...state, loading: action.payload.loading\r\n                }\r\n            case ACTION.ADD_RECIVED_POST:\r\n                return {\r\n                    ...state,\r\n                    recievedPosts: [action.payload.recievedPosts, ...state.recievedPosts]\r\n                }\r\n            case ACTION.ADD_POST_AT_START:\r\n\r\n                return {\r\n                    ...state,\r\n                    savedTimeline: [{ ...state.savedTimeline[0], result: [...state.recievedPosts, ...state.savedTimeline[0].result] },\r\n                    ...state.savedTimeline],\r\n                    recievedPosts: []\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    const initialState = {\r\n        // savedTimeline: [{pageNumber: 0, hasMore: true, result: []},],\r\n        savedTimeline: [],\r\n        recievedPosts: [],\r\n        loading: false,\r\n        hasMore: false\r\n    }\r\n    const [timeline, setTimeline] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [{ savedTimeline, recievedPosts, loading, hasMore }, dispatch] = useReducer(\r\n        reducer, initialState\r\n    )\r\n\r\n\r\n    const addToSaveTimeline = useCallback((posts) => {\r\n        dispatch({ type: ACTION.ADD_POST, payload: { savedTimeline: posts, hasMore: posts.hasMore } })\r\n    }, [dispatch])\r\n\r\n    const getTimeline = () => {\r\n        console.log(\"in timeline\", socket);\r\n        if (socket == null) return\r\n\r\n        dispatch({ type: ACTION.SET_LOAD, payload: { loading: true } })\r\n        let i = 0, limit = 10\r\n        console.log(savedTimeline, pageNumber);\r\n        while (i < savedTimeline.length && savedTimeline[i].pageNumber !== pageNumber) {\r\n            ++i\r\n        }\r\n        if (i < savedTimeline.length) {\r\n            return\r\n        }\r\n        else {\r\n            try {\r\n                console.log(\"get timline\");\r\n                socket.emit('get-timeline', { pageNumber, limit })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-timeline', addToSaveTimeline)\r\n    }, [socket, addToSaveTimeline])\r\n\r\n\r\n    useEffect(() => {\r\n        if (savedTimeline.length) {\r\n            savedTimeline.map(item => {\r\n                setTimeline(prev => [...prev, ...item.result])\r\n\r\n            })\r\n        }\r\n    }, [savedTimeline])\r\n\r\n    const postFeed = (files, fileNames, postId, caption) => {\r\n        if (socket == null) return\r\n        dispatch({ type: ACTION.SET_LOAD, payload: { loading: true } })\r\n        try {\r\n            socket.emit('post-feed', { files, fileNames, postId, caption })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-post', (post) => {\r\n            console.log(\"recived post\");\r\n            console.log(post);\r\n            dispatch({ type: ACTION.ADD_RECIVED_POST, payload: { recievedPosts: post } })\r\n        })\r\n    }, [socket])\r\n\r\n    const addRecivedToTimeline = useCallback(() => {\r\n        setTimeline(prev => [...recievedPosts, ...prev])\r\n        dispatch({ type: ACTION.ADD_RECIVED_POST, payload: { recievedPosts: [] } })\r\n    })\r\n\r\n    const getPostFromTimeline = async (postId) => {\r\n        let i = 0\r\n        console.log(postId);\r\n        while (i < timeline.length && timeline[i]._id !== postId) {\r\n            ++i\r\n\r\n        }\r\n        if (i < timeline.length) {\r\n            console.log(timeline[i]);\r\n            return timeline[i]\r\n        }\r\n        else {\r\n            try {\r\n                const post = await getPostById(postId)\r\n                console.log(post);\r\n                return post\r\n            } catch (error) {\r\n                console.log(error)\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    console.log(timeline);\r\n    const value = {\r\n        getPostFromTimeline,\r\n        timeline,\r\n        setTimeline,\r\n        getTimeline,\r\n        pageNumber,\r\n        setPageNumber,\r\n        hasMore,\r\n        loading,\r\n        postFeed,\r\n        recievedPosts,\r\n        addRecivedToTimeline\r\n    }\r\n\r\n    return (\r\n        <PostContext.Provider value={value}>\r\n            {children}\r\n        </PostContext.Provider>\r\n    )\r\n}","import { initializeApp } from 'firebase/app';\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n// const firestore = app.firestore()\r\n// export const database = {\r\n//     folders: firestore.collection('folders'),\r\n//     files: firestore.collection('files'),\r\n//     formatDoc: doc => {\r\n//         return { id: doc.id, ...doc.data() }\r\n//     },\r\n//     getCurrentTimeStamp: firebase.firestore.FieldValue.serverTimestamp\r\n// }\r\nexport const storage = getStorage(app);\r\nexport default app\r\n\r\n","import Resizer from \"react-image-file-resizer\";\r\nimport { storage } from '../firebase';\r\nimport axios from 'axios';\r\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport const imageResize = async (file) => {\r\n    const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n            Resizer.imageFileResizer(file, 640, 480, \"JPEG\", 100, 0, (uri) => resolve(uri), \"file\");\r\n        });\r\n\r\n    if (file) {\r\n        return await resizeFile(file);\r\n    }\r\n    else return\r\n}\r\n\r\nexport const uploadFileToStorage = async (file, reffile) => {\r\n    const storageRef = ref(storage, reffile);\r\n\r\n    const uploadTask = (file, storageRef) =>\r\n        new Promise((resolve) => {\r\n            // 'file' comes from the Blob or File API\r\n            uploadBytes(storageRef, file).then(async (snapshot) => {\r\n                getDownloadURL(storageRef)\r\n                    .then((url) => {\r\n                        resolve(url)\r\n                    })\r\n            })\r\n        });\r\n\r\n    return await uploadTask(file, storageRef)\r\n}\r\n\r\nexport const deleteImgInStorage = (reffile) => {\r\n    const desertRef = ref(storage, reffile);\r\n    // Delete the file\r\n    deleteObject(desertRef).then(() => {\r\n        // File deleted successfully\r\n        console.log(\"deleted succes\");\r\n    }).catch((error) => {\r\n        // Uh-oh, an error occurred!\r\n        console.log(\"unsuccess\", error);\r\n    });\r\n}\r\n\r\nexport const getMentionNoti = async (username) => {\r\n    try {\r\n        const { data } = await axios.get(`${apiUrl}/get-mention-notification/${username}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, fileNames, postId, caption, username, progressFn) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/${username}`,\r\n            { files, fileNames, postId, caption }, progressFn);\r\n        return { data };\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const getPostById = async (postId) => {\r\n    try {\r\n        const { data } = await axios.get(`${apiEndpoint}/posts/${postId}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const resizeImage = async (file) => {\r\n    try {\r\n        const responce = await axios.post(`${apiUrl}/resize/file`,\r\n            file, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data; ',\r\n            }\r\n        });\r\n        return responce.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\n\r\nexport const getUserPhotosByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const retrivePostByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/userId/${userId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};","import React, { useContext, useState, useEffect, createContext, useCallback } from 'react'\r\nimport { useSocket } from './socketProvider';\r\n\r\nconst UserPostContext = createContext();\r\nexport function useUserPost() {\r\n    return useContext(UserPostContext)\r\n}\r\nexport function UserPostProvider({ children }) {\r\n    const socket = useSocket()\r\n    const [allProfilepost, setAllProfilePost] = useState([])\r\n    const [profilePost, setProfilePost] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasMore, setMore] = useState(false)\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        console.log(\"in profile context\");\r\n    }, [socket])\r\n\r\n    const addprofilepost = useCallback(({ posts, username }) => {\r\n        setProfilePost([...posts.result])\r\n        setAllProfilePost(prev => [...prev, { username, posts: posts.result }])\r\n        // setAllProfilePost(prev => {\r\n        //     let find = false;\r\n        //     prev.map(item => {\r\n        //         if (item.username === username) {\r\n        //             find = true\r\n        //             return item\r\n        //         }\r\n        //         return item\r\n        //     })\r\n        //     if (find) return prev\r\n        //     else return [...prev, { username, posts: rposts.result }]\r\n        // })\r\n        setLoading(false)\r\n        setMore(posts?.result.length > 0)\r\n    }, [setAllProfilePost, setProfilePost])\r\n\r\n    function getProfilePost(username, pageNumber) {\r\n        setLoading(true)\r\n        let limit = 10\r\n        let i = 0\r\n        while (i < allProfilepost.length && allProfilepost[i].username !== username) {\r\n            ++i\r\n        }\r\n        if (i < allProfilepost.length) {\r\n            setLoading(false)\r\n            return setProfilePost(allProfilepost[i].posts)\r\n        }\r\n        else {\r\n            console.log(\"get Post\");\r\n            try {\r\n                socket.emit('get-profile-post', { username, pageNumber, limit })\r\n\r\n                // return () => socket.off('receive-profile-post') \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return\r\n        socket.on('receive-profile-post', addprofilepost)\r\n    }, [socket, addprofilepost])\r\n\r\n    function addToAllProfilePost(username, post) {\r\n        setAllProfilePost(prev => {\r\n            let madeChange = false;\r\n            const newAlluserPosts = prev.map(item => {\r\n                if (item.username === username) {\r\n                    madeChange = true\r\n                    return {\r\n                        ...item,\r\n                        posts: [post, ...item.posts]\r\n                    }\r\n                }\r\n                return item\r\n            })\r\n            if (madeChange) return newAlluserPosts\r\n            else return [...prev, {\r\n                username, posts: [post]\r\n            }]\r\n        })\r\n    }\r\n\r\n    const value = {\r\n        profilePost,\r\n        setProfilePost,\r\n        getProfilePost,\r\n        setAllProfilePost,\r\n        pageNumber,\r\n        setPageNumber,\r\n        hasMore,\r\n        setMore,\r\n        loading,\r\n        addToAllProfilePost\r\n    }\r\n\r\n    return (\r\n        <UserPostContext.Provider value={value}>\r\n            {children}\r\n        </UserPostContext.Provider>\r\n    )\r\n}"],"sourceRoot":""}