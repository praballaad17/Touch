{"version":3,"sources":["services/authenticationServices.js","pages/sign-up.js"],"names":["jwt","apiEndpoint","apiUrl","tokenKey","localStorage","getItem","axios","defaults","headers","common","login","usernameOrEmail","password","authToken","a","request","data","authorization","method","response","setItem","token","Error","error","registerUser","username","fullName","email","post","console","log","logout","removeItem","SignUp","loggedInUser","user","useState","setUsername","setFullName","emailAddress","setEmailAddress","setPassword","setError","isInvalid","handleSignUp","event","preventDefault","window","location","message","useEffect","document","title","to","ROUTES","className","onSubmit","type","placeholder","onChange","target","value","disabled"],"mappings":"2NAMgBA,E,uDAFVC,G,MAAcC,IAAS,SACvBC,EAAW,QACDH,EAOPI,aAAaC,QAAQF,GAN5BG,IAAMC,SAASC,QAAQC,OAAvB,MAAyCT,EAgBpC,IAAMU,EAAK,uCAAG,WAAOC,EAAiBC,EAAUC,GAAlC,iBAAAC,EAAA,sEAEXC,EACJJ,GAAmBC,EACf,CAAEI,KAAM,CAAEL,kBAAiBC,aAC3B,CAAEJ,QAAS,CAAES,cAAeJ,IALjB,SAMMP,IAAM,GAAD,OAAIL,EAAJ,uBAC1BiB,OAAQ,QACLH,IARY,cAMXI,EANW,OAUjBf,aAAagB,QAAQjB,EAAUgB,EAASH,KAAKK,OAV5B,kBAWVF,EAASH,MAXC,sCAaX,IAAIM,MAAM,KAAIH,SAASH,KAAKO,OAbjB,yDAAH,0DA0BLC,EAAY,uCAAG,WAAOC,EAAUC,EAAUC,EAAOf,GAAlC,eAAAE,EAAA,+EAEDR,IAAMsB,KAAN,UAAc3B,EAAd,aAAsC,CAC3D0B,QACAD,WACAD,WACAb,aANsB,cAElBO,EAFkB,OAQxBU,QAAQC,IAAIX,EAASH,KAAKK,OAC1BjB,aAAagB,QAAQjB,EAAUgB,EAASH,KAAKK,OATrB,kBAUjBF,EAASH,MAVQ,sCAYlB,IAAIM,MAAM,KAAIH,SAASH,KAAKO,OAZV,yDAAH,4DA6DlB,SAAeQ,IAAtB,+B,4CAAO,sBAAAjB,EAAA,sDACLV,aAAa4B,WAAW7B,GADnB,4C,yLCzGQ,SAAS8B,EAAT,GAAyC,IAAjBC,EAAgB,EAAtBC,KAE/B,EAAgCC,mBAAS,IAAzC,mBAAOX,EAAP,KAAiBY,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOxB,EAAP,KAAiB6B,EAAjB,KAEA,EAA0BL,mBAAS,IAAnC,mBAAOb,EAAP,KAAcmB,EAAd,KACMC,EAAyB,KAAb/B,GAAoC,KAAjB2B,EAE/BK,EAAY,uCAAG,WAAOC,GAAP,SAAA/B,EAAA,6DACnB+B,EAAMC,iBADa,kBAGXtB,YAAaC,EAAUC,EAAUa,EAAc3B,GAHpC,OAIjBmC,OAAOC,SAAW,IAJD,gDAMjBnB,QAAQC,IAAI,KAAMX,UAClBmB,EAAY,IACZE,EAAgB,IAChBC,EAAY,IACZC,EAAS,KAAMO,SAVE,yDAAH,sDAsBlB,OAJAC,qBAAU,WACRC,SAASC,MAAQ,oBAChB,IAEClB,EAAqB,cAAC,IAAD,CAAUmB,GAAIC,MAGrC,qBAAKC,UAAU,QAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,mBAIChC,GAAS,mBAAGgC,UAAU,oBAAb,SAAkChC,IAE5C,uBAAMgC,UAAU,cAAcC,SAAUZ,EAAc1B,OAAO,OAA7D,UACE,uBACE,aAAW,sBACXuC,KAAK,OACLC,YAAY,WACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAAYuB,EAAOC,QAC7CA,MAAOpC,IAET,uBACE,aAAW,uBACXgC,KAAK,OACLC,YAAY,YACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAYsB,EAAOC,QAC7CA,MAAOnC,IAET,uBACE,aAAW,2BACX+B,KAAK,OACLC,YAAY,gBACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAgBoB,EAAOC,QACjDA,MAAOtB,IAET,uBACE,aAAW,sBACXkB,KAAK,WACLC,YAAY,WACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAAYmB,EAAOC,QAC7CA,MAAOjD,IAET,wBACEkD,SAAUnB,EACVc,KAAK,SACLF,UAAS,qCACTZ,GAAa,gBAJf,2BAUJ,qBAAKY,UAAU,mBAAf,SACE,oBAAGA,UAAU,4BAAb,iCAEE,cAAC,IAAD,CAAMF,GAAIC,IAAcC,UAAU,cAAlC","file":"static/js/11.9d4fd2d3.chunk.js","sourcesContent":["import axios from 'axios';\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from 'jwt-decode';\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\"\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['token'] = jwt\n}\n\nsetJwt(getJwt())\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey)\n}\n/**\n * Logs a user in with the provided credentials\n * @function login\n * @param {string} usernameOrEmail The username or email to login with\n * @param {string} password A password to log in with\n * @param {string} authToken A token to be used instead of a username/email or password\n * @returns {object} The user object\n */\nexport const login = async (usernameOrEmail, password, authToken) => {\n  try {\n    const request =\n      usernameOrEmail && password\n        ? { data: { usernameOrEmail, password } }\n        : { headers: { authorization: authToken } };\n    const response = await axios(`${apiEndpoint}/login`, {\n      method: 'POST',\n      ...request,\n    });\n    localStorage.setItem(tokenKey, response.data.token)\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n\n/**\n * Registers a user with the provided credentials\n * @param {string} email A user's email address\n * @param {string} fullName A user's full name\n * @param {string} username A user's username\n * @param {string} password A user's password\n * @returns {object} The user object\n */\nexport const registerUser = async (username, fullName, email, password) => {\n  try {\n    const response = await axios.post(`${apiEndpoint}/register`, {\n      email,\n      fullName,\n      username,\n      password,\n    });\n    console.log(response.data.token);\n    localStorage.setItem(tokenKey, response.data.token)\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Changes a users password\n * @function changePassword\n * @param {string} oldPassword The user's current password\n * @param {string} newPassword The new password\n * @param {string} authToken A user's auth token\n */\nexport const changePassword = async (oldPassword, newPassword, authToken) => {\n  try {\n    await axios.put(\n      `${apiEndpoint}/password`,\n      {\n        oldPassword,\n        newPassword,\n      },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\nexport const getUserByUserId = async (id) => {\n  try {\n    const response = await axios.get(`${apiEndpoint}/userId/${id}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n}\n\n\nexport const getusersFollowersById = async (userId) => {\n  try {\n    const response = await axios.get(`${apiUrl}/user/userId/followers/${userId}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nexport async function logout() {\n  localStorage.removeItem(tokenKey)\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}","import { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { registerUser } from '../services/authenticationServices';\n\nexport default function SignUp({ user: loggedInUser }) {\n\n  const [username, setUsername] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState('');\n  const isInvalid = password === '' || emailAddress === '';\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    try {\n      await registerUser(username, fullName, emailAddress, password);\n      window.location = \"/\"\n    } catch (error) {\n      console.log(error.response);\n      setFullName('');\n      setEmailAddress('');\n      setPassword('');\n      setError(error.message);\n    }\n    // } else {\n    //   setUsername('');\n    //   setError('That username is already taken, please try another.');\n    // }\n  };\n\n  useEffect(() => {\n    document.title = 'Sign Up - Touch';\n  }, []);\n\n  if (loggedInUser) return <Redirect to={ROUTES.DASHBOARD} />\n\n  return (\n    <div className=\"login\">\n\n      <div className=\"login__box\">\n        <div className=\"login__box--sub\">\n          <h1 className=\"login__box--head\">\n            Touch\n          </h1>\n\n          {error && <p className=\"login__box--error\">{error}</p>}\n\n          <form className=\"login__form\" onSubmit={handleSignUp} method=\"POST\">\n            <input\n              aria-label=\"Enter your username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setUsername(target.value)}\n              value={username}\n            />\n            <input\n              aria-label=\"Enter your full name\"\n              type=\"text\"\n              placeholder=\"Full name\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setFullName(target.value)}\n              value={fullName}\n            />\n            <input\n              aria-label=\"Enter your email address\"\n              type=\"text\"\n              placeholder=\"Email address\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setEmailAddress(target.value)}\n              value={emailAddress}\n            />\n            <input\n              aria-label=\"Enter your password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setPassword(target.value)}\n              value={password}\n            />\n            <button\n              disabled={isInvalid}\n              type=\"submit\"\n              className={`btn btn-login\n            ${isInvalid && 'u-opacity-50'}`}\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n        <div className=\"login__box--foot\">\n          <p className=\"login__box--foot--content\">\n            Have an account?{` `}\n            <Link to={ROUTES.LOGIN} className=\"u-text-blue\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}