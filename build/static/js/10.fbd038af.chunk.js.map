{"version":3,"sources":["services/authenticationServices.js","pages/login.js"],"names":["jwt","apiEndpoint","apiUrl","tokenKey","localStorage","getItem","axios","defaults","headers","common","login","usernameOrEmail","password","authToken","a","request","data","authorization","method","response","setItem","token","Error","error","registerUser","username","fullName","email","post","console","log","logout","removeItem","Login","loggedInUser","user","useLocation","useState","emailAddress","setEmailAddress","setPassword","setError","isInvalid","handleLogin","event","preventDefault","window","location","message","useEffect","document","title","to","ROUTES","className","onSubmit","type","placeholder","onChange","target","value","disabled"],"mappings":"2NAMgBA,E,uDAFVC,G,MAAcC,IAAS,SACvBC,EAAW,QACDH,EAOPI,aAAaC,QAAQF,GAN5BG,IAAMC,SAASC,QAAQC,OAAvB,MAAyCT,EAgBpC,IAAMU,EAAK,uCAAG,WAAOC,EAAiBC,EAAUC,GAAlC,iBAAAC,EAAA,sEAEXC,EACJJ,GAAmBC,EACf,CAAEI,KAAM,CAAEL,kBAAiBC,aAC3B,CAAEJ,QAAS,CAAES,cAAeJ,IALjB,SAMMP,IAAM,GAAD,OAAIL,EAAJ,uBAC1BiB,OAAQ,QACLH,IARY,cAMXI,EANW,OAUjBf,aAAagB,QAAQjB,EAAUgB,EAASH,KAAKK,OAV5B,kBAWVF,EAASH,MAXC,sCAaX,IAAIM,MAAM,KAAIH,SAASH,KAAKO,OAbjB,yDAAH,0DA0BLC,EAAY,uCAAG,WAAOC,EAAUC,EAAUC,EAAOf,GAAlC,eAAAE,EAAA,+EAEDR,IAAMsB,KAAN,UAAc3B,EAAd,aAAsC,CAC3D0B,QACAD,WACAD,WACAb,aANsB,cAElBO,EAFkB,OAQxBU,QAAQC,IAAIX,EAASH,KAAKK,OAC1BjB,aAAagB,QAAQjB,EAAUgB,EAASH,KAAKK,OATrB,kBAUjBF,EAASH,MAVQ,sCAYlB,IAAIM,MAAM,KAAIH,SAASH,KAAKO,OAZV,yDAAH,4DA6DlB,SAAeQ,IAAtB,+B,4CAAO,sBAAAjB,EAAA,sDACLV,aAAa4B,WAAW7B,GADnB,4C,yLCzGQ,SAAS8B,EAAT,GAAwC,IAAjBC,EAAgB,EAAtBC,KAE9B,GADiBC,cACuBC,mBAAS,KAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB4B,EAAjB,KAEA,EAA0BH,mBAAS,IAAnC,mBAAOd,EAAP,KAAckB,EAAd,KACMC,EAAyB,KAAb9B,GAAoC,KAAjB0B,EAE/BK,EAAW,uCAAG,WAAOC,GAAP,SAAA9B,EAAA,6DAClB8B,EAAMC,iBADY,kBAIVnC,YAAM4B,EAAc1B,GAJV,OAKhBkC,OAAOC,SAAW,IALF,gDAOhBR,EAAgB,IAChBC,EAAY,IACZC,EAAS,KAAMO,SATC,yDAAH,sDAkBjB,OALAC,qBAAU,WACRC,SAASC,MAAQ,kBAChB,IAGCjB,EAAqB,cAAC,IAAD,CAAUkB,GAAIC,MAGrC,qBAAKC,UAAU,QAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,mBAIC/B,GAAS,mBAAG+B,UAAU,oBAAb,SAAkC/B,IAE5C,uBAAM+B,UAAU,cAAcC,SAAUZ,EAAazB,OAAO,OAA5D,UACE,uBACE,aAAW,2BACXsC,KAAK,OACLC,YAAY,gBACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAgBoB,EAAOC,QACjDA,MAAOtB,IAET,uBACE,aAAW,sBACXkB,KAAK,WACLC,YAAY,WACZH,UAAU,qBACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAAYmB,EAAOC,QAC7CA,MAAOhD,IAET,wBACEiD,SAAUnB,EACVc,KAAK,SACLF,UAAS,qCACTZ,GAAa,gBAJf,yBAWJ,qBAAKY,UAAU,mBAAf,SACE,oBAAGA,UAAU,4BAAb,uCAEE,cAAC,IAAD,CAAMF,GAAIC,IAAgBC,UAAU,cAApC","file":"static/js/10.fbd038af.chunk.js","sourcesContent":["import axios from 'axios';\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from 'jwt-decode';\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\"\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['token'] = jwt\n}\n\nsetJwt(getJwt())\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey)\n}\n/**\n * Logs a user in with the provided credentials\n * @function login\n * @param {string} usernameOrEmail The username or email to login with\n * @param {string} password A password to log in with\n * @param {string} authToken A token to be used instead of a username/email or password\n * @returns {object} The user object\n */\nexport const login = async (usernameOrEmail, password, authToken) => {\n  try {\n    const request =\n      usernameOrEmail && password\n        ? { data: { usernameOrEmail, password } }\n        : { headers: { authorization: authToken } };\n    const response = await axios(`${apiEndpoint}/login`, {\n      method: 'POST',\n      ...request,\n    });\n    localStorage.setItem(tokenKey, response.data.token)\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n\n/**\n * Registers a user with the provided credentials\n * @param {string} email A user's email address\n * @param {string} fullName A user's full name\n * @param {string} username A user's username\n * @param {string} password A user's password\n * @returns {object} The user object\n */\nexport const registerUser = async (username, fullName, email, password) => {\n  try {\n    const response = await axios.post(`${apiEndpoint}/register`, {\n      email,\n      fullName,\n      username,\n      password,\n    });\n    console.log(response.data.token);\n    localStorage.setItem(tokenKey, response.data.token)\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Changes a users password\n * @function changePassword\n * @param {string} oldPassword The user's current password\n * @param {string} newPassword The new password\n * @param {string} authToken A user's auth token\n */\nexport const changePassword = async (oldPassword, newPassword, authToken) => {\n  try {\n    await axios.put(\n      `${apiEndpoint}/password`,\n      {\n        oldPassword,\n        newPassword,\n      },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\nexport const getUserByUserId = async (id) => {\n  try {\n    const response = await axios.get(`${apiEndpoint}/userId/${id}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n}\n\n\nexport const getusersFollowersById = async (userId) => {\n  try {\n    const response = await axios.get(`${apiUrl}/user/userId/followers/${userId}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nexport async function logout() {\n  localStorage.removeItem(tokenKey)\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (error) {\n    return null;\n  }\n}","import { useState, useEffect } from 'react';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { login } from '../services/authenticationServices'\n\nexport default function Login({ user: loggedInUser }) {\n  const location = useLocation()\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState('');\n  const isInvalid = password === '' || emailAddress === '';\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    try {\n      await login(emailAddress, password);\n      window.location = \"/\"\n    } catch (error) {\n      setEmailAddress('');\n      setPassword('');\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    document.title = 'Login - Touch';\n  }, []);\n\n\n  if (loggedInUser) return <Redirect to={ROUTES.TIMELINE} />\n\n  return (\n    <div className=\"login\">\n\n      <div className=\"login__box\">\n        <div className=\"login__box--sub\">\n          <h1 className=\"login__box--head\">\n            Touch\n          </h1>\n\n          {error && <p className=\"login__box--error\">{error}</p>}\n\n          <form className=\"login__form\" onSubmit={handleLogin} method=\"POST\">\n            <input\n              aria-label=\"Enter your email address\"\n              type=\"text\"\n              placeholder=\"Email address\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setEmailAddress(target.value)}\n              value={emailAddress}\n            />\n            <input\n              aria-label=\"Enter your password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setPassword(target.value)}\n              value={password}\n            />\n            <button\n              disabled={isInvalid}\n              type=\"submit\"\n              className={`btn btn-login\n            ${isInvalid && 'u-opacity-50'}`}\n            >\n              Login\n            </button>\n          </form>\n        </div>\n\n        <div className=\"login__box--foot\">\n          <p className=\"login__box--foot--content\">\n            Don't have an account?{` `}\n            <Link to={ROUTES.SIGN_UP} className=\"u-text-blue\">\n              Sign up\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}